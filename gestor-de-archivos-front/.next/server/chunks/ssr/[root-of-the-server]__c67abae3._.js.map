{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/crist/Downloads/Node/gestor-de-archivos-front/hooks/useGetFiles.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function useGetFiles() {\r\n  const uri = process.env.NEXT_PUBLIC_API_URL;\r\n  \r\n  const [files, setFiles] = useState([]);\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const getFiles = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const res = await fetch(`${uri}files`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        const data = await res.json();\r\n        setFiles(data);\r\n        setLoading(false)\r\n      } catch(err) {\r\n        console.log(err);\r\n      };\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getFiles();\r\n  }, [])\r\n\r\n  return {files, loading}\r\n}"],"names":[],"mappings":";;;AAAA;;AAEe,SAAS;IACtB,MAAM;IAEN,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACrC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,WAAW;QACb,IAAI;YACF,WAAW;YACX,MAAM,MAAM,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,EAAE;gBACrC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;YACF;YACA,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,SAAS;YACT,WAAW;QACb,EAAE,OAAM,KAAK;YACX,QAAQ,GAAG,CAAC;QACd;;IACJ;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,OAAO;QAAC;QAAO;IAAO;AACxB","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/crist/Downloads/Node/gestor-de-archivos-front/context/FilesContext.js"],"sourcesContent":["'use client';\r\nimport { useState, createContext, useContext, useRef, useEffect } from \"react\";\r\nimport useGetFiles from \"@/hooks/useGetFiles\";\r\n\r\nconst FilesContext = createContext();\r\nconst apiUrl = process.env.NEXT_PUBLIC_API_URL;\r\n\r\nexport function FilesProvider({children}) {\r\n    const [contextFiles, setContextFiles] = useState([]);\r\n    const timeouts = useRef({});\r\n    const {files, loading} = useGetFiles();\r\n    const [contextLoader, setContextLoader] = useState(false)\r\n\r\n    useEffect(()=> {\r\n        setContextFiles(files)\r\n    }, [files])\r\n\r\n    //Function to delete a file\r\n    const deleteFile = async (filename) => {\r\n        setContextLoader(true);\r\n        try {\r\n          const response = await fetch(`${apiUrl}delete/${filename}`, {\r\n            method: 'DELETE'\r\n          });\r\n          if (response.ok) {\r\n            setContextFiles(prev => prev.filter(d => d.fileName !== filename));\r\n            setContextLoader(false);\r\n          }\r\n        } catch(err) {\r\n            setContextLoader(false);\r\n            console.log(err.message);\r\n        }\r\n    };\r\n    \r\n    //Function to upload a file\r\n    const uploadFile = async () => {\r\n\r\n    };\r\n    \r\n\r\n    //Function for starting a new download\r\n    /*const getFiles = async () => {\r\n        \r\n        setDownloads(prev => [...prev,\r\n            {\r\n                id: file._id,\r\n                name: file.originalName,\r\n                progress: 0,\r\n                controller\r\n            }\r\n        ]);\r\n    };\r\n\r\n    //Function for updating progress\r\n    const updateProgress = (id, progress) => {\r\n        setDownloads(prev => \r\n            prev.map(d => d.id === id ? {...d, progress} : d)\r\n        );\r\n    };\r\n\r\n    //Function for cancelling download\r\n    const cancelDownload = (id) => {\r\n        timeouts.current[id] = setTimeout(() => {\r\n            setDownloads(prev => prev.filter(d => d.id !== id));\r\n            delete timeouts.current[id];\r\n        }, 2000);\r\n    };\r\n\r\n    //Function for deleting completed downloads\r\n    const completeDownload = (id) => {\r\n        timeouts.current[id] = setTimeout(() =>{\r\n            setDownloads(prev => prev.filter(d => d.id !== id));\r\n            delete timeouts.current[id];\r\n        },5000);\r\n    };\r\n    */\r\n\r\n    return (\r\n        <FilesContext.Provider value={{contextFiles, loading, deleteFile, contextLoader}}>\r\n            {children}\r\n        </FilesContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFiles = () => useContext(FilesContext);"],"names":[],"mappings":";;;;;AACA;AACA;AAFA;;;;AAIA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD;AACjC,MAAM;AAEC,SAAS,cAAc,EAAC,QAAQ,EAAC;IACpC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACnD,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE,CAAC;IACzB,MAAM,EAAC,KAAK,EAAE,OAAO,EAAC,GAAG,CAAA,GAAA,oHAAA,CAAA,UAAW,AAAD;IACnC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,gBAAgB;IACpB,GAAG;QAAC;KAAM;IAEV,2BAA2B;IAC3B,MAAM,aAAa,OAAO;QACtB,iBAAiB;QACjB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,OAAO,OAAO,EAAE,UAAU,EAAE;gBAC1D,QAAQ;YACV;YACA,IAAI,SAAS,EAAE,EAAE;gBACf,gBAAgB,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,IAAK,EAAE,QAAQ,KAAK;gBACxD,iBAAiB;YACnB;QACF,EAAE,OAAM,KAAK;YACT,iBAAiB;YACjB,QAAQ,GAAG,CAAC,IAAI,OAAO;QAC3B;IACJ;IAEA,2BAA2B;IAC3B,MAAM,aAAa,WAEnB;IAGA,sCAAsC;IACtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAkCA,GAEA,qBACI,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAC;YAAc;YAAS;YAAY;QAAa;kBAC1E;;;;;;AAGb;AAEO,MAAM,WAAW,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE","debugId":null}}]
}