{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/crist/Downloads/Node/gestor-de-archivos-front/context/FilesContext.js"],"sourcesContent":["'use client';\r\nimport { useState, createContext, useContext, useRef } from \"react\";\r\n\r\nconst FilesContext = createContext();\r\nconst apiUrl = process.env.NEXT_PUBLIC_API_URL;\r\n\r\nexport function FilesProvider({children}) {\r\n    const [files, setFiles] = useState([]);\r\n    const timeouts = useRef({});\r\n\r\n    //Function for starting a new download\r\n    const getFiles = async () => {\r\n        try {\r\n            const response = await fetch(`${apiUrl}files`)\r\n        } catch(err) {\r\n            console.log(err.message);\r\n        }\r\n        setDownloads(prev => [...prev,\r\n            {\r\n                id: file._id,\r\n                name: file.originalName,\r\n                progress: 0,\r\n                controller\r\n            }\r\n        ]);\r\n    };\r\n\r\n    //Function for updating progress\r\n    const updateProgress = (id, progress) => {\r\n        setDownloads(prev => \r\n            prev.map(d => d.id === id ? {...d, progress} : d)\r\n        );\r\n    };\r\n\r\n    //Function for cancelling download\r\n    const cancelDownload = (id) => {\r\n        timeouts.current[id] = setTimeout(() => {\r\n            setDownloads(prev => prev.filter(d => d.id !== id));\r\n            delete timeouts.current[id];\r\n        }, 2000);\r\n    };\r\n\r\n    //Function for deleting completed downloads\r\n    const completeDownload = (id) => {\r\n        timeouts.current[id] = setTimeout(() =>{\r\n            setDownloads(prev => prev.filter(d => d.id !== id));\r\n            delete timeouts.current[id];\r\n        },5000);\r\n    };\r\n\r\n    return (\r\n        <FilesContext.Provider value={{downloads, startDownload, updateProgress, cancelDownload, completeDownload}}>\r\n            {children}\r\n        </FilesContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFiles = () => useContext(FilesContext);"],"names":[],"mappings":";;;;;AACA;AADA;;;AAGA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD;AACjC,MAAM;AAEC,SAAS,cAAc,EAAC,QAAQ,EAAC;IACpC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACrC,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE,CAAC;IAEzB,sCAAsC;IACtC,MAAM,WAAW;QACb,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,GAAG,OAAO,KAAK,CAAC;QACjD,EAAE,OAAM,KAAK;YACT,QAAQ,GAAG,CAAC,IAAI,OAAO;QAC3B;QACA,aAAa,CAAA,OAAQ;mBAAI;gBACrB;oBACI,IAAI,KAAK,GAAG;oBACZ,MAAM,KAAK,YAAY;oBACvB,UAAU;oBACV;gBACJ;aACH;IACL;IAEA,gCAAgC;IAChC,MAAM,iBAAiB,CAAC,IAAI;QACxB,aAAa,CAAA,OACT,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,KAAK;oBAAC,GAAG,CAAC;oBAAE;gBAAQ,IAAI;IAEvD;IAEA,kCAAkC;IAClC,MAAM,iBAAiB,CAAC;QACpB,SAAS,OAAO,CAAC,GAAG,GAAG,WAAW;YAC9B,aAAa,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;YAC/C,OAAO,SAAS,OAAO,CAAC,GAAG;QAC/B,GAAG;IACP;IAEA,2CAA2C;IAC3C,MAAM,mBAAmB,CAAC;QACtB,SAAS,OAAO,CAAC,GAAG,GAAG,WAAW;YAC9B,aAAa,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;YAC/C,OAAO,SAAS,OAAO,CAAC,GAAG;QAC/B,GAAE;IACN;IAEA,qBACI,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAC;YAAW;YAAe;YAAgB;YAAgB;QAAgB;kBACpG;;;;;;AAGb;AAEO,MAAM,WAAW,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE","debugId":null}}]
}